/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase() {}
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void ArmConBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void BackConBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void LegConBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

    virtual void RollerConBtnClicked()
    {
        // Override and implement this function in MainScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Image image1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger > ArmButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger > BackButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger > ArmButton_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger > LegButton;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger > BackButton_1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextAreaWithOneWildcard textArea1_1;
    touchgfx::TextAreaWithOneWildcard textArea1_1_1;
    touchgfx::TextAreaWithOneWildcard textArea1_1_2;
    touchgfx::TextAreaWithOneWildcard textArea1_1_3;
    touchgfx::ButtonWithIcon upCountBtn;
    touchgfx::ButtonWithIcon downCountBtn;
    touchgfx::ButtonWithLabel ArmConButton;
    touchgfx::ButtonWithLabel BackConButton;
    touchgfx::ButtonWithLabel LegConButton;
    touchgfx::ButtonWithLabel RollerConButton;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::BoxWithBorder boxWithBorder1_1_1;
    touchgfx::BoxWithBorder boxWithBorder1_1_1_1;
    touchgfx::TextArea textArea3;
    touchgfx::TextAreaWithOneWildcard ArmConText;
    touchgfx::TextAreaWithOneWildcard BackConText;
    touchgfx::TextAreaWithOneWildcard LegConText;
    touchgfx::TextAreaWithOneWildcard RollerConText;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_1Buffer[TEXTAREA1_1_SIZE];
    static const uint16_t TEXTAREA1_1_1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_1_1Buffer[TEXTAREA1_1_1_SIZE];
    static const uint16_t TEXTAREA1_1_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_1_2Buffer[TEXTAREA1_1_2_SIZE];
    static const uint16_t TEXTAREA1_1_3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1_1_3Buffer[TEXTAREA1_1_3_SIZE];
    static const uint16_t ARMCONTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar ArmConTextBuffer[ARMCONTEXT_SIZE];
    static const uint16_t BACKCONTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar BackConTextBuffer[BACKCONTEXT_SIZE];
    static const uint16_t LEGCONTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar LegConTextBuffer[LEGCONTEXT_SIZE];
    static const uint16_t ROLLERCONTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar RollerConTextBuffer[ROLLERCONTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAINSCREENVIEWBASE_HPP
